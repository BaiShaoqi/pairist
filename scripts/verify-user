#!/usr/bin/env node

const admin = require('firebase-admin');

async function main() {
  const projectId = process.env.PAIRIST_PROJECT_ID;
  const serviceAccountPath = process.env.PAIRIST_SERVICE_ACCOUNT_PATH;

  if (!projectId) {
    console.error('PAIRIST_PROJECT_ID is not set.');
    process.exit(1);
  }

  if (!serviceAccountPath) {
    console.error('PAIRIST_SERVICE_ACCOUNT_PATH is not set.');
    process.exit(1);
  }

  const [emailToVerify] = process.argv.slice(2);

  if (!emailToVerify) {
    console.error('Usage: ./scripts/verify-user <email-to-verify>');
    process.exit(1);
  }

  console.log(`Firebase project is: ${projectId}`);

  console.log(`Manually verifying email address for user: ${emailToVerify}`);

  admin.initializeApp({
    credential: admin.credential.cert(require(serviceAccountPath)),
    databaseURL: `https://${projectId}.firebaseio.com`,
  });

  const auth = admin.auth();

  let user;
  try {
    user = await auth.getUserByEmail(emailToVerify);
  } catch (err) {
    console.error(err.message);
    process.exit(1);
  }

  const customClaims = user.customClaims || {};

  if (customClaims.pairistValidEmail === true) {
    console.error('User email is already verified.');
  } else {
    await auth.setCustomUserClaims(user.uid, { pairistValidEmail: true });
  }

  console.log('Done!');

  process.exit(0);
}

main().catch((err) => {
  console.error(err);
  process.exit(1);
});
